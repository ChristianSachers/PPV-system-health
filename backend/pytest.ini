[tool:pytest]
# PPV System Health Monitor - Discovery-Driven Test Configuration
# Optimized for exploratory data analysis and campaign pattern discovery

testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test discovery markers for different exploration phases
markers =
    unit: Unit tests for individual components
    integration: Integration tests with database and external APIs
    discovery: Tests that validate data exploration hypotheses
    business_rules: Tests that validate critical business logic (campaign vs deal classification)
    data_validation: Tests that ensure data integrity and UUID preservation
    xlsx_processing: Tests for XLSX file parsing and validation
    performance: Tests that validate system performance under load
    regression: Tests that protect against breaking existing functionality during discovery
    slow: Tests that take longer than 1 second to run

# Test environment configuration
addopts =
    -v
    --strict-markers
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=80
    --maxfail=5
    --durations=10

# Database test configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Test data isolation
asyncio_mode = auto

# Discovery-specific test configuration
# Longer timeout for exploration tests that might process large datasets
timeout = 300

# Test database configuration
env =
    TEST_DATABASE_URL=postgresql://test_user:test_pass@localhost:5432/ppv_test_db
    TEST_ENVIRONMENT=testing
    API_BEARER_TOKEN=test_token_for_api_integration